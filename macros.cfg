#####################################################################
#  Macros
#####################################################################
[gcode_macro G32]
description: Home + QGL + Home
gcode:%}
    {% set parkposition_x = printer["gcode_macro _User_Variables"].parkposition_x %}
    {% set parkposition_y = printer["gcode_macro _User_Variables"].parkposition_y %}
    {% set parkposition_z = printer["gcode_macro _User_Variables"].parkposition_z %}
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    G0 X{parkposition_x} Y{parkposition_y} Z{parkposition_z} F3600
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set SOAK_MINUTES = params.SOAK_MINUTES|default(15)|int %}
    {% set SOAK_HOURS = params.SOAK_HOURS|default(0.0)|float %}
    G92 E0 ; Reset Extruder

    M140 S{BED_TEMP} ;Start heating bed
    M190 S{BED_TEMP} ;Wait for bed to reach temp before proceeding

    M104 S170 ;Start heating extruder
    G28
    HEAT_SOAK BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP} SOAK_MINUTES={SOAK_MINUTES} SOAK_HOURS={SOAK_HOURS}
    G32                            ; home all axes
    ;BED_MESH_CALIBRATE ; Auto bed leveling, 16 point mesh

    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
    INTRO_LINE
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x-10} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro TURN_OFF_MOTORS]
gcode:
  M117 Motors off.
  M118 Motors off.
  M18

# Make the buzzer (assuming you have one, as many displays do!) play sounds properly
#[gcode_macro M300]
#gcode:
  #  # Use a default 1kHz tone if S is omitted.
  #{% set S = params.S|default(1000)|int %}
  ## Use a 10ms duration is P is omitted.
  #{% set P = params.P|default(100)|int %}
  #{% if S > 0 %}
  #  SET_PIN PIN=BEEPER VALUE=10 cycle_time={1.0/(S|float)}
  #  G4 P{P}
  #  SET_PIN PIN=BEEPER VALUE=0
  #{% else %}
  #  G4 P{P}
  #{% endif %}

# Intro line prints a line at the front edge of the printer to purge the nozzle
# a bit and get stuff goin'!
[gcode_macro INTRO_LINE]
gcode:
    M117 Intro Line..
    M118 Intro Line..
    SAVE_GCODE_STATE NAME=INTRO_LINE_state
    {% set RETRACT = params.RETRACT|default(0.0)|float %}
    {% set FILAMENT_LEN  = params.FILAMENT_LEN|default(15.0)|float %}
    {% set FEED_RATE = params.FEED_RATE|default(600.0)|float %}
    {% set Z_DIST = params.Z_DIST|default(0.3)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(240.0)|float %}
    G90                            ; Use absolute coordinates
    G92 E0.0                       ; set extruder posion to 0
    G1 E{RETRACT} F3600           ; extrude retract
    M109 S{EXTRUDER_TEMP}
    G0 Z10
    G1 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_minimum.y+5}
    G1 Z{Z_DIST} F300              ; Move the nozzle very close to the bed
    G92 E0.0                       ; set extruder posion to 0
    G91
    G1 X+80 E{FILAMENT_LEN} F{FEED_RATE}     ; intro line
    G1 Y-0.5
    G1 X-80 E{FILAMENT_LEN} F{FEED_RATE}
    G92 E0.0                       ; set extruder posion to 0
    M106 S255                      ; turn part cooling to max so we can  breal the thread
    G4 P2000                       ; wait a couple of seconds
    G0 Z+10 Y+20 F24000                 ; move up quickly
    G90
    RESTORE_GCODE_STATE NAME=INTRO_LINE_state
    M117

[gcode_macro PARK_REAR]
gcode:
    M117 Park Rear
    M118 Park Rear
    SAVE_GCODE_STATE NAME=PARK_REAR_state
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_minimum.z+30]|max %}
    #G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x -1} Y{th.axis_maximum.y - 1} z{z_safe} F3600  ; park nozzle at rear
    RESTORE_GCODE_STATE NAME=PARK_REAR_state
    M117

# From other printer. Some of these macros don't yet work on this one, so..
# ... all the good stuff is commented out for now.
#[gcode_macro CLEAN_NOZZLE]
#gcode:
#    M117 Clean Nozzle
#    M118 Clean Nozzle
#    SAVE_GCODE_STATE NAME=CLEAN_NOZZLE_state
#    {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
#    G4 S0
##    SECURE_DOCK_PROBE
##    G90                            ; Use absolute coordinates
##    M109 S{extruder_temp}          ; Set and wait for nozzle to reach temperature
##    G1 Z15  F12000
##    G1 Y250 F12000
##    G1 X300 F12000
##    G1 Z5 F12000
##    {% set wipe_count=8 %}
##    {% set z_min=-1 %}
##    {% set z_max=5 %}
##    {% set speed=12000 %}
##    {% for wipe in range(wipe_count) %}
##       {% set z=[z_max-loop.index, z_min]|max %}
##       G0 Y300 X290 Z{z} F{speed}
##       G0 Y300 X250 Z{z} F{speed}
##       M117 NC Z={z} i={loop.index}
##    {% endfor %}
##    G1 Z15 F12000
#    RESTORE_GCODE_STATE NAME=CLEAN_NOZZLE_state
#    M117

# A heat soak. Useful to have the printer sit at temp for a while so hopefully
# all thermal expansion is done and stable.
[gcode_macro HEAT_SOAK]
gcode:
    M117 Heating..
    M118 Heating..
    SAVE_GCODE_STATE NAME=HEAT_SOAK_state
    {% set bed_temp = params.BED_TEMP|default(110)|float %}
    {% set extruder_temp = params.EXTRUDER_TEMP|default(200)|float %}
    {% set soak_minutes = params.SOAK_MINUTES|default(15)|int %}
    {% set soak_hours = params.SOAK_HOURS|default(0.0)|float %}
    {% set soak_ms = 1000*(soak_minutes * 60 + soak_hours*3600)|int %}
    G90                            ; Use absolute coordinates
    #_HEATER_ON
    M106 S255                      ; set print fan to full speed
    M140 S{bed_temp}               ; Start bed heating
    PARK_REAR                      ; Go to purge bucket or safe rear location to catch any ooze.
    M109 S{extruder_temp}          ; Set and wait for nozzle to reach temperature
    M190 S{bed_temp}               ; Wait for bed to reach temperature
    M117 Heat Soaking
    M118 Heat Soaking
    #AOCTAVE
    G4 P{soak_ms}
    #{% for tmpvar in range(soak_seconds) %}
    #  G4 P1000 # wait a second
    #{% endfor %}
    M117 Heat Soak Done
    M118 Heat Soak Done
    #BEETHOVAN
    RESTORE_GCODE_STATE NAME=HEAT_SOAK_state
    M117

#[gcode_macro CALIBRATE_Z]
#rename_existing: BASE_CALIBRATE_Z
#gcode:
#    {% set bed_position = params.BED_POSITION|default('None') %}
#    G28
#    M117 Z-Calibration..
#    M118 E1 Z-Calibration..
#    Attach_Probe_Lock                # a macro for fetching the probe first
#    G91
#    G1 Z10
#    G90
#    M118 E1 Base Z-Calibration Start..
#    {% if bed_position != 'None' %}
#      BASE_CALIBRATE_Z BED_POSITION={bed_position}
#    {% else %}
#      BASE_CALIBRATE_Z
#    {% endif %}
#    M118 E1 Base Z-Calibration Finished..
#    Dock_Probe_Lock                # and parking it afterwards (or DOCK_PROBE in klicky macros)
#    M117

[gcode_shell_command backup_cfg]
command: sh /home/michael/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg